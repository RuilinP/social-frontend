name: Deploy frontend to Google Cloud

on:
  push:
    branches:
      - dev  

env:
  PROJECT_ID: "tactical-codex-448305-v5"
  GAR_LOCATION: "us-central1"
  REPOSITORY: "social-repo"
  IMAGE: "social-frontend"
  GKE_CLUSTER: "dev-cluster"
  GKE_ZONE: "us-central1-a"
  DEPLOYMENT_NAME: "frontend"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_CREDENTIALS }}

      - name: Configure Docker for Artifact Registry
        run: |
          gcloud auth configure-docker ${{ env.GAR_LOCATION }}-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG="${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}"
          docker build -t $IMAGE_TAG .
          docker push $IMAGE_TAG

      - name: Get GKE Credentials
        uses: google-github-actions/get-gke-credentials@v2
        with:
          cluster_name: ${{ env.GKE_CLUSTER }}
          location: ${{ env.GKE_ZONE }}

      - name: Deploy to GKE
        run: |
          # Check if deployment exists
          if kubectl get deployment ${{ env.DEPLOYMENT_NAME }}; then
            echo "Updating existing deployment..."
            kubectl set image deployment/${{ env.DEPLOYMENT_NAME }} frontend=${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REPOSITORY }}/${{ env.IMAGE }}:${{ github.sha }}
          else
            echo "Creating new deployment..."
            kubectl apply -f k8s/frontend-deployment.yml
          fi
          
          kubectl rollout status deployment/${{ env.DEPLOYMENT_NAME }}
